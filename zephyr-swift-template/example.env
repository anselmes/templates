# ==============================================================================
# HELLO PROJECT ENVIRONMENT CONFIGURATION
# ==============================================================================
# This file defines environment variables for the Zephyr RTOS project
# with Swift language support. It configures toolchains, target boards,
# and build-related environment variables.
#
# To use these settings, source this file using:
#   source .env
# ==============================================================================

# ==== Path Configuration ====

# Add local 'bin' directory to the PATH environment variable
# This allows executables in the local 'bin' directory to be found and run.
# The PATH:+ construct ensures the variable is appended only if PATH exists.
export PATH="${PWD}/bin${PATH:+:${PATH}}"

# ==== Swift Configuration ====

# Specify the Swift toolchain to be used
# This tells the build system which Swift toolchain to utilize.
# Valid values include: "swift", "swift-latest", or a specific version identifier.
# export TOOLCHAINS="swift"

# ==== Zephyr Target Configuration ====

# Specify the Zephyr build target architecture
# This defines the target architecture for the Zephyr RTOS build.
# Format: <arch>-<vendor>-<os>-<abi>
export ZEPHYR_BUILD_TARGET="riscv32-none-none-eabi"

# Specify the Zephyr toolchain variant (e.g., cross-compile)
# This determines which toolchain is used for compiling Zephyr code.
# Common values: "zephyr", "gnuarmemb", "xtools", "cross-compile"
export ZEPHYR_TOOLCHAIN_VARIANT="cross-compile"

# ==== Cross-Compiler Configuration ====

# Define the path to the cross-compiler toolchain
# This should point to the bin directory of the toolchain with prefix included.
# Uncomment the appropriate line based on your setup.
# export CROSS_COMPILE="/opt/altera/24.1std/riscfree/toolchain/riscv32-unknown-elf/bin/riscv32-unknown-elf-"
export CROSS_COMPILE="/opt/zephyrproject/sdk/zephyr-sdk-0.17.0/riscv64-zephyr-elf/bin/riscv64-zephyr-elf-"

# ==== Board Configuration ====

# Define the Zephyr board overlay file path
# Overlays are used to customize the board's default configuration through Device Tree.
# These files typically have a .overlay extension and modify hardware configurations.
# export ZEPHYR_BOARD_OVERLAY="boards/esp32c6_devkitc.overlay"
# export ZEPHYR_BOARD_OVERLAY="boards/niosv_g.overlay"
# export ZEPHYR_BOARD_OVERLAY="boards/niosv_m.overlay"

# Set the Zephyr board identifier (board/family/core)
# This specifies the target board for the Zephyr build.
# Must match a board definition in Zephyr's board directory.
# export ZEPHYR_BOARD="niosv_g"
# export ZEPHYR_BOARD="niosv_m"
export ZEPHYR_BOARD="esp32c6_devkitc/esp32c6/hpcore"
